from ..rules import *
from ..progress_type import *
from ... import FlagLocationData, VarLocationData

# How I decided the progress types:
# I set always_default by default (pun not intended)
# If the npc/... gives you a progression key item, it will be always_priority
# If accessibility is not always given, it will be always_excluded

table: dict[str, FlagLocationData | VarLocationData] = {
    "Driftveil City - Item from man for seeing more than 50 pokémon": LocationData(0000000, always_default, "Driftveil City", has_number_of_species(51)),
    "Driftveil City - Item from girl in pokémon center #1": LocationData(0000000, always_default, "Driftveil City", None),
    "Driftveil City - Item from girl in pokémon center #2": LocationData(0000000, always_default, "Driftveil City", None),
    "Driftveil City - Item from girl in pokémon center #3": LocationData(0000000, always_default, "Driftveil City", None),
    "Driftveil City - Item from man in black in market": LocationData(0000000, always_default, "Driftveil City", None),
    # The lady is asking for a random TM move every day
    "Driftveil City - Daily item from lady asking for a pokémon knowing a TM move": LocationData(0000000, always_excluded, "Driftveil City", None),
    # Item becomes unavailable after defeating the gym
    "Driftveil Gym - Gym guide item": LocationData(0000000, always_excluded, "Driftveil City", None),
    "Cold Storage - Item from worker": LocationData(0000000, always_default, "Cold Storage", None),
    "Route 6 - Item from ranger Shanti": LocationData(0000000, always_default, "Route 6", None),
    "Route 6 - Item from ranger Richard": LocationData(0000000, always_default, "Route 6", None),
    # All Deerling forms require playing through all seasons
    "Route 6 - Item from scientist for all Deerling forms": LocationData(0000000, always_excluded, "Route 6", has_species("Deerling")),
    "Route 6 - Item from child in western house": LocationData(0000000, always_default, "Route 6", None),
    "Chargestone Cave - Item from Professor Juniper": LocationData(0000000, always_default, "Chargestone Cave", None),
    "Chargestone Cave - Item from nugget brothers #1": LocationData(0000000, always_default, "Chargestone Cave", None),
    "Chargestone Cave - Item from nugget brothers #2": LocationData(0000000, always_default, "Chargestone Cave", None),
    "Mistralton City - Item from veteran in Cargo Service building": LocationData(0000000, always_default, "Mistralton City", None),
    "Mistralton Gym - Gym guide item": LocationData(0000000, always_excluded, "Mistralton City", None),
    "Route 7 - Item from ranger Mary": LocationData(0000000, always_default, "Route 7", None),
    "Route 7 - Item from ranger Pedro": LocationData(0000000, always_default, "Route 7", None),
    "Twist Mountain - Item from worker near ice rock cave": LocationData(0000000, always_default, "Twist Mountain", can_reach_region("Pokémon League")),
    "Icirrus City - Item from Aha if answer was correct": LocationData(0000000, always_default, "Icirrus City", None),
    "Icirrus City - Item from Aha if answer was incorrect": LocationData(0000000, always_default, "Icirrus City", None),
    "Icirrus City - Item from Pokémon Fan Club chairman for gaining 25 levels": LocationData(0000000, always_default, "Icirrus City", None),
    "Icirrus City - Item from Pokémon Fan Club chairman for gaining 50 levels": LocationData(0000000, always_default, "Icirrus City", None),
    # This is not only unreasonable, but also has an astronomically low softlock chance if we don't document breeding
    # data and consider it during generation
    "Icirrus City - Item from Pokémon Fan Club chairman for gaining 99 levels": LocationData(0000000, always_excluded, "Icirrus City", None),
    # Both only accessible in winter
    "Icirrus City - Item from the former Team Rocket member's wife": LocationData(0000000, always_excluded, "Icirrus City", None),
    # Item becomes unavailable after defeating the gym
    "Icirrus Gym - Gym guide item": LocationData(0000000, always_excluded, "Icirrus City", None),
    "Dragonspiral Tower - Item from Cedric Juniper": LocationData(0000000, always_default, "Dragonspiral Tower", None),
    "Route 8 - Item from Bianca": LocationData(0000000, always_default, "Route 8", can_reach_region("Relic Castle Lower Floors")),
    "Route 8 - Item from ranger Lewis": LocationData(0000000, always_default, "Route 8", None),
    "Route 8 - Item from ranger Annie": LocationData(0000000, always_default, "Route 8", None),
    # Following 4 items require certain daytime
    "Route 8 - Item from eastern parasol lady in the morning": LocationData(0000000, always_excluded, "Route 8", None),
    "Route 8 - Item from eastern parasol lady during daytime": LocationData(0000000, always_excluded, "Route 8", None),
    "Route 8 - Item from eastern parasol lady in the evening": LocationData(0000000, always_excluded, "Route 8", None),
    "Route 8 - Item from eastern parasol lady at night": LocationData(0000000, always_excluded, "Route 8", None),
    "Moor of Icirrus - Item from ranger Chloris": LocationData(0000000, always_default, "Moor of Icirrus", None),
    "Moor of Icirrus - Item from ranger Harry": LocationData(0000000, always_default, "Moor of Icirrus", None),
    "Shopping Mall Nine - Item from worker": LocationData(0000000, always_default, "Route 9", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
    "AAAAAAAAAAAAAAAAAAA": LocationData(0000000, None, "AAAAAAAAAAAA", None),
}
